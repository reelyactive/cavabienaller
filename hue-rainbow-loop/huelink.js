/*
 * Copyright reelyActive 2020
 * We believe in an open Internet of Things
 */


const nodeHueApi = require('node-hue-api');
const config = require('./config.js');


let hueApi = new nodeHueApi.HueApi();


/**
 * Attempt to link with the first bridge in the given list, registering a new
 * user.
 * @param {Array} bridges The discovered bridges.
 */
function linkBridge(bridges) {
  if(bridges.length) {
    let host = bridges[0].ipaddress;

    console.log('Hue bridge found at', host);

    // Attempt to register a new user on the Hue bridge
    hueApi.registerUser(host, config.userDescription)
          .then(handleRegistrationResult)
          .fail(handleRegistrationError)
          .done();
  }
  else {
    return console.log('No Hue bridges found.');
  }
};


/**
 * Display the username of the user generated by the bridge.
 */
function handleRegistrationResult(username) {
  console.log('\r\n----------------------------------------------------------');
  console.log('Successfully registered user. Save the following username.');
  console.log('---> Username:', username);
  console.log('----------------------------------------------------------\r\n');
}


/**
 * Display the error message.
 */
function handleRegistrationError(error) {
  console.log('Registration failed:', error.message);
}


// Search for bridges using uPnP, then attempt to link and register user
nodeHueApi.upnpSearch(config.searchTimeMilliseconds).then(linkBridge).done();